-- Select all state from customer

SELECT  state
FROM customers

------------------------------------------------------------

-- Select no dublicate state from customer

SELECT DISTINCT  state
FROM customers

------------------------------------------------------------


-- Return all products,which unit price is under, order by name in this 3 columns
                                 -- name
                                 -- unit price
                                 -- new price (unit price *1.1)
				 
SELECT 
       name, 
       unit_price, 
       unit_price*1.1 AS 'new price'
FROM products
WHERE unit_price < 2
ORDER BY name

------------------------------------------------------------------------------------

-- From order_item table get the items 
-- for order #6 
-- where the total price is greater than 30

SELECT *
FROM order_items
WHERE order_id = 6 AND  unit_price * quantity > 30

-------------------------------------------------------------------------------------

-- Return products with quantity in stock equal to 49,38,72

SELECT *
FROM products
WHERE quantity_in_stock IN (49, 38, 72)

----------------------------------------------------------------------------

-- Return customers born 
                       -- between 01-01-1990 and 01-01-2000
                       
 SELECT *
 FROM customers
 WHERE birth_date BETWEEN '1990-01-01' AND '2000-01-01'
 
 -----------------------------------------------------------------------
 -- Get the customers whose
            -- addresses contain TRAIl or AVENUE
              
	
SELECT *
 FROM customers
WHERE address LIKE '%TRAIL%' OR
         address  LIKE '%AVENUE%'

            -- phone numbers end with 9
 SELECT *
 FROM customers
 WHERE phone LIKE '%9'
 ------------------------------------------------------------------------
       -- Get the customer whose
              -- first name are ELKA or AMBUR
SELECT *
FROM customers
 WHERE first_name REGEXP 'Elka|Ambur' 
 
              -- last name end with EY or ON
SELECT *
FROM customers
 WHERE last_name REGEXP 'Ey$|On$'
 
 			-- last name start with MY or contains SE
SELECT *
FROM customers
 WHERE last_name REGEXP '^my|se'
 
                        -- last name contain B folow by R or U
SELECT *
FROM customers
 WHERE last_name REGEXP 'b[ru]'
 
 ------------------------------------------------------------------------
  -- Get orders that are not shipped yet 
SELECT *
FROM orders
WHERE shipped_date IS NULL
--------------------------------------------------------------------------
 -- Get from order item all order #2, order by total price in descending order
 SELECT *
 FROM order_items
 WHERE order_id = 2
 ORDER BY quantity*unit_price DESC
 -----------------------------------------------------------------------------
 	-- Get the top tree customers/with highest points/
          
SELECT *
FROM customers
ORDER BY points DESC
LIMIT 3

-------------------------------------------
 --  INNER JOIN 
 SELECT order_id, oi.product_id, name, quantity, oi.unit_price
FROM order_items oi
JOIN products p 
	ON oi.product_id = p.product_id
--------------------------------------------------------------------
             -- Joining Accross Databases
SELECT *
FROM order_items oi
JOIN sql_inventory.products p
      ON oi.product_id = p.product_id
--------------------------------------------------------------
                 -- Self Joins
SELECT 
     e.employee_id,
     e.first_name,
     m.first_name  AS manager
FROM employees e
JOIN employees m
     ON e.reports_to = m.employee_id
  --------------------------------------------------------------
           -- Joining Multiple Tables
USE sql_store;
SELECT 
      o.order_id,
      o.order_date,
      c.first_name,
      c.last_name,
      os.name AS status
FROM orders o
JOIN customers c 
     ON o.customer_id = c. customer_id       // USING (customer_id)
JOIN order_statuses os
     ON o.status = os.order_status_id
     ----------------------------------------
     SELECT 
     p.date,
     i.number AS invoice_number,
     c.name,
     p.amount,
     pm. name AS payment
     
 FROM payments p
JOIN clients c 
          ON p.client_id = c.client_id      // USING (client_id)
JOIN invoices i
          ON p.invoice_id = i.invoice_id    // USING (invoice_id)
JOIN payment_methods pm
          ON p.payment_method = pm.payment_method_id
-------------------------------------------------------------
          -- OUTER JOINS
SELECT 
      p.product_id,
      p.name,
      oi.quantity      
FROM products p 
LEFT JOIN order_items oi
     ON oi.product_id = p.product_id      // USING (product_id)
     -------------------------------------------------------------------
         -- OUTER JOIN between Multuply Tables
SELECT
	o.order_date,
    o.order_id,
    c.first_name AS customer,
    sh.name AS shipper,
    os.name AS status
FROM orders o
JOIN customers c
     ON o.customer_id = c.customer_id 
LEFT JOIN shippers sh
     ON o.shipper_id = sh.shipper_id
JOIN order_statuses os
     ON o.status = os.order_status_id
   ------------------------------------------------------------------------
            -- SELF OUTER JOIN
USE SQL_hr;
SELECT 
      e.employee_id,
      e.first_name,
      m.first_name AS manager
      
FROM employees e
LEFT JOIN employees m
--------------------------------------------------------------------
           -- The USING clause
USE sql_invoicing;

SELECT
     p.date,
     c.name AS client,
     p.amount,
     pm.name AS payment_method
     
FROM payments p
JOIN clients c 
      USING (client_id)
JOIN payment_methods pm
     ON p.payment_method = pm. payment_method_id
     
      
